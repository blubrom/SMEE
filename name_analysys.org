
---
title: "French given names per year per department"
author: "Lucas Mello Schnorr, Jean-Marc Vincent"
date: "October, 2022"
output:
  pdf_document: default
  html_document:
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
*  The problem context
The aim of the activity is to develop a methodology to answer a specific question on a given dataset. 

The dataset is the set of Firstname given in France on a large period of time. 
[https://www.insee.fr/fr/statistiques/2540004](https://www.insee.fr/fr/statistiques/fichier/2540004/dpt2021_csv.zip), we choose this dataset because it is sufficiently large, you can't do the analysis by hand, the structure is simple


You need to use the _tidyverse_ for this analysis. Unzip the file _dpt2020_txt.zip_ (to get the **dpt2020.csv**). Read in R with this code. Note that you might need to install the `readr` package with the appropriate command.

**  Download Raw Data from the website

   #+begin_src R :results output :session *R* :exports both
   file = "data/dpt2021_csv.zip"
   if(!file.exists(file)){
       download.file("https://www.insee.fr/fr/statistiques/fichier/2540004/dpt2021_csv.zip",
	destfile=file)
    }
    unzip(file)
   #+end_src

   #+RESULTS:

  Check if your file is the same as in the first analysis (reproducibility)

  #+begin_src shell :results output :exports both
  md5sum data/dpt2021.csv
  #+end_src

  #+RESULTS:
  : f18a7d627883a0b248a0d59374f3bab7  data/dpt2021.csv

expected :
MD5 (dpt2021.csv) = f18a7d627883a0b248a0d59374f3bab7

** Build the Dataframe from file

   #+begin_src R :results output :session *R* :exports both
   library(tidyverse)
   FirstNames <- read_delim("data/dpt2021.csv",delim=";")
   #+end_src

   #+RESULTS:
   #+begin_example
   â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.2 â”€â”€
   [32mâœ”[39m [34mggplot2[39m 3.3.5     [32mâœ”[39m [34mpurrr  [39m 0.3.4
   [32mâœ”[39m [34mtibble [39m 3.1.6     [32mâœ”[39m [34mdplyr  [39m 1.0.8
   [32mâœ”[39m [34mtidyr  [39m 1.2.0     [32mâœ”[39m [34mstringr[39m 1.4.0
   [32mâœ”[39m [34mreadr  [39m 2.1.3     [32mâœ”[39m [34mforcats[39m 0.5.2
   â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
   [31mâœ–[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
   [31mâœ–[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()

   [1mindexing[0m [34mdpt2021.csv[0m [-------------------------------------] [32m24.85GB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [==================------------------] [32m179.92MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [==================------------------] [32m163.26MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [===================-----------------] [32m165.38MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [====================----------------] [32m156.34MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [=====================---------------] [32m155.61MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [======================--------------] [32m162.94MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [=======================-------------] [32m165.36MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [=========================-----------] [32m172.26MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [===========================---------] [32m178.86MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [==============================------] [32m188.79MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [===============================-----] [32m191.02MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [=================================---] [32m198.17MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [==================================--] [32m198.67MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [====================================] [32m200.10MB/s[0m, eta: [36m 0s[0m[1mindexing[0m [34mdpt2021.csv[0m [====================================] [32m200.49MB/s[0m, eta: [36m 0s[0m                                                                                                                   [1mRows: [22m[34m3784673[39m [1mColumns: [22m[34m5[39m
   [36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
   [1mDelimiter:[22m ";"
   [31mchr[39m (3): preusuel, annais, dpt
   [32mdbl[39m (2): sexe, nombre

   [36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
   [36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
   #+end_example


All of these following questions may need a preliminary analysis of the data, feel free to present answers and justifications in your own order and structure your report as it should be for a scientific report.

1. Choose a firstname and analyse its frequency along time. Compare several firstnames frequency
2. Establish by gender the most given firstname by year. Analyse the evolution of the most frequent firstname.
3. Optional : Which department has a larger variety of names along
   time ? Is there some sort of geographical correlation with the
   data?

data cleaning:

#+begin_src R :results output :session *R* :exports both
   FirstNames %>%
      # change the names of the columns to make them more self-explanatory
      rename(prenom = preusuel) %>%
      rename(annee = annais) %>%
      filter(annee != "XXXX") %>%
      # convert the annee col to numbers
      mutate(annee = as.numeric(annee)) -> FirstNamesClean
#+end_src

#+RESULTS:

* Choose a firstname and analyse its frequency along time.

 aggregate the data a little bit
 #+begin_src R :results output :session *R* :exports both
      FirstNamesClean %>% group_by(prenom, annee, sexe) %>%
      # create a new table where we put the sum of the nombre col for each (prenom, annee) pair
      summarize(nombre = sum(nombre)) %>%  as.data.frame() -> NamesByYears
 # %>%
      # keep only distinct entries 
     #  distinct() -> NamesByYears
  #+end_src

  #+RESULTS:
  : 
  : [1m[22m`summarise()` has grouped output by 'prenom', 'annee'. You can override using the `.groups` argument.

 then compute the frequencies of each name 
 #+begin_src R :results output :session *R* :exports both
  NamesByYears %>%
      group_by(annee) %>%
      # add to each line, the total number of born child for the year
      summarize(prenom, sexe, nombre, total=sum(nombre)) %>%
      ungroup() %>%
      # calculate the frequency and rename the cols accordingly
      mutate(total = (nombre / total) * 100) %>%
      rename(frequence = total) -> NameFrequencies

  print(NameFrequencies)
 #+end_src

 #+RESULTS:
 #+begin_example

 [1m[22m`summarise()` has grouped output by 'annee'. You can override using the `.groups` argument.

 [38;5;246m# A tibble: 264,540 Ã— 5[39m
    annee prenom          sexe nombre frequence
    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m          [3m[38;5;246m<dbl>[39m[23m  [3m[38;5;246m<dbl>[39m[23m     [3m[38;5;246m<dbl>[39m[23m
 [38;5;250m 1[39m  [4m1[24m900 _PRENOMS_RARES     1   [4m1[24m221  0.310   
 [38;5;250m 2[39m  [4m1[24m900 _PRENOMS_RARES     2   [4m1[24m713  0.435   
 [38;5;250m 3[39m  [4m1[24m900 ABEL               1    382  0.097[4m1[24m  
 [38;5;250m 4[39m  [4m1[24m900 ABRAHAM            1      9  0.002[4m2[24m[4m9[24m 
 [38;5;250m 5[39m  [4m1[24m900 ACHILLE            1    152  0.038[4m6[24m  
 [38;5;250m 6[39m  [4m1[24m900 ACHILLES           1      4  0.001[4m0[24m[4m2[24m 
 [38;5;250m 7[39m  [4m1[24m900 ADAM               1      9  0.002[4m2[24m[4m9[24m 
 [38;5;250m 8[39m  [4m1[24m900 ADELAIDE           2    143  0.036[4m3[24m  
 [38;5;250m 9[39m  [4m1[24m900 ADÃˆLE              2    626  0.159   
 [38;5;250m10[39m  [4m1[24m900 ADELHEID           2      3  0.000[4m7[24m[4m6[24m[4m3[24m
 [38;5;246m# â€¦ with 264,530 more rows[39m
 #+end_example

 #+begin_src R :results output :session *R* :exports both
  get_frequency_plot = function(name){
      NameFrequencies %>% 
          filter(prenom == name) %>%
          ggplot(aes(x = annee, y = frequence)) +
          scale_x_continuous(name="AnnÃ©e", limits=c(1900,2025), breaks=seq(1900,2025,10))+
          scale_y_continuous(name="FrÃ©quence (%)") +
 geom_point() + theme_bw();
  }
 #+end_src

 #+RESULTS:

 #+begin_src R :results output :session *R* :exports both
NameFrequencies %>% filter(prenom == "YANAEL" | prenom == "YANAÃ‹L" | prenom == "YANNAEL" | prenom == "YANAELLE") %>% summarize(total = sum(nombre), min = min(annee), max = max(annee)) %>% str()
 #+end_src

 #+RESULTS:
 : tibble [1 Ã— 3] (S3: tbl_df/tbl/data.frame)
 :  $ total: num 79
 :  $ min  : num 2000
 :  $ max  : num 2020

** different name frequency plots

  #+begin_src R :results output graphics file :file pictures/frequency_achille.png :exports both :width 600 :height 400 :session *R*
get_frequency_plot("ACHILLE")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_achille.png]]

  #+begin_src R :results output graphics file :file pictures/frequency_clement.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("CLÃ‰MENT")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_clement.png]]
  #+begin_src R :results output graphics file :file pictures/frequency_ludmila.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("LUDMILA")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_ludmila.png]]
  #+begin_src R :results output graphics file :file pictures/frequency_hugo.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("HUGO")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_hugo.png]]
  #+begin_src R :results output graphics file :file pictures/frequency_arthur.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("ARTHUR")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_arthur.png]]

  #+begin_src R :results output graphics file :file pictures/frequency_emma.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("EMMA")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_emma.png]]
  #+begin_src R :results output graphics file :file pictures/frequency_manon.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("MANON")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_manon.png]]
  #+begin_src R :results output graphics file :file pictures/frequency_dylan.png :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("CHARLES")
  #+end_src

  #+RESULTS:
  [[file:pictures/frequency_dylan.png]]

  #+begin_src R :results output graphics file :file (org-babel-temp-file "figure" ".png") :exports both :width 600 :height 400 :session *R*
  get_frequency_plot("YANAÃ‹L")
  #+end_src

  #+RESULTS:
  [[file:/tmp/babel-iuE875/figuremsPCPz.png]]

* Establish by gender the most given firstname by year. Analyse the evolution of the most frequent firstname 

  Store in TopFirstNames the frame where we have the most given name
  by year and gender and its frequency

  #+begin_src R :results output :session *R* :exports both
FirstNamesClean %>% group_by(annee, sexe) %>%
    summarize(prenom, nombre, nombre_max = max(nombre), freq=nombre/sum(nombre)*100) %>%
    filter(nombre == nombre_max) %>%
    select(-nombre, -nombre_max) -> TopFirstNames

    print(TopFirstNames)
  #+end_src

  #+RESULTS:
  #+begin_example

  [1m[22m`summarise()` has grouped output by 'annee', 'sexe'. You can override using the `.groups` argument.

  [38;5;246m# A tibble: 244 Ã— 4[39m
  [38;5;246m# Groups:   annee, sexe [244][39m
     annee  sexe prenom   freq
     [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m   [3m[38;5;246m<dbl>[39m[23m
  [38;5;250m 1[39m  [4m1[24m900     1 ANDRÃ‰   0.628
  [38;5;250m 2[39m  [4m1[24m900     2 MARIE   1.12 
  [38;5;250m 3[39m  [4m1[24m901     1 MARCEL  0.579
  [38;5;250m 4[39m  [4m1[24m901     2 MARIE   1.10 
  [38;5;250m 5[39m  [4m1[24m902     1 GEORGES 0.563
  [38;5;250m 6[39m  [4m1[24m902     2 MARIE   1.11 
  [38;5;250m 7[39m  [4m1[24m903     1 ANDRÃ‰   0.625
  [38;5;250m 8[39m  [4m1[24m903     2 MARIE   1.12 
  [38;5;250m 9[39m  [4m1[24m904     1 ANDRÃ‰   0.637
  [38;5;250m10[39m  [4m1[24m904     2 MARIE   1.09 
  [38;5;246m# â€¦ with 234 more rows[39m
  #+end_example

   plot the frequency of the top given name by year and gender

   #+begin_src R :results output graphics file :file data/frequency_of_top_name_per_year.png :exports both :width 600 :height 400 :session *R*
   TopFirstNames %>% ggplot(aes(x = annee, y = freq, col = factor(sexe))) +
          scale_x_continuous(name="AnnÃ©e", limits=c(1900,2025), breaks=seq(1900,2025,10))+
          scale_y_continuous(name="FrÃ©quence (%)") +
          geom_point() + theme_bw();
   #+end_src

   #+RESULTS:
   [[file:data/frequency_of_top_name_per_year.png]]
