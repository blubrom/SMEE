#+title: Trouver le maximum de la fonction secrète
#+author: Clément Morand
* contexte
on souhaite trouver le maximum de la fonction secrète à l'adresse:
https://adaphetnodes.shinyapps.io/design_of_experiments/?user_d3318
On dispose de 10 000 essais, c'est une fonction de 11 variables qui
prennent des valeurs sur [0,1]
* trouver les variables importantes

  #+begin_src R :results silent :session *R* :exports both
  library(FrF2)
  library(DoE.wrapper)
  #+end_src

  #+RESULTS:
  #+begin_example
  Le chargement a nécessité le package : DoE.base
  Le chargement a nécessité le package : grid
  Le chargement a nécessité le package : conf.design
  Registered S3 method overwritten by 'DoE.base':
    method           from       
    factorize.factor conf.design

  Attachement du package : ‘DoE.base’

  Les objets suivants sont masqués depuis ‘package:stats’:

      aov, lm

  L'objet suivant est masqué depuis ‘package:graphics’:

      plot.design

  L'objet suivant est masqué depuis ‘package:base’:

      lengths

  Le chargement a nécessité le package : rsm
  #+end_example

  Afin de déterminer les variables dont la variation semble avoir un
  effet, nous allons utiliser un design Factoriel.

  #+begin_src R :results output :session *R* :exports both
  d1 <- pb(nruns= 12 ,n12.taguchi= FALSE ,nfactors= 11, ncenter= 0 , blocks=1, replications = 4, randomize= TRUE, seed= 26052 ,
  factor.names=list(A=c(0,1), B=c(0,1), C=c(0,1), D=c(0,1), E=c(0,1), F=c(0,1), G=c(0,1), H=c(0,1), I=c(0,1), J=c(0,1), K=c(0,1) ));
  write.csv(d1, "plackett-burman.csv", row.names = FALSE, quote=FALSE);
  d1;
  #+end_src

  #+RESULTS:
  #+begin_example

     run.no run.no.std.rp A B C D E F G H I J K
  1       1          12.1 0 0 0 0 0 0 0 0 0 0 0
  2       2           2.1 0 1 1 0 1 1 1 0 0 0 1
  3       3           4.1 0 1 0 1 1 0 1 1 1 0 0
  4       4           3.1 1 0 1 1 0 1 1 1 0 0 0
  5       5          11.1 1 0 1 1 1 0 0 0 1 0 1
  6       6           7.1 1 0 0 0 1 0 1 1 0 1 1
  7       7           8.1 1 1 0 0 0 1 0 1 1 0 1
  8       8          10.1 0 1 1 1 0 0 0 1 0 1 1
  9       9           9.1 1 1 1 0 0 0 1 0 1 1 0
  10     10           6.1 0 0 0 1 0 1 1 0 1 1 1
  11     11           5.1 0 0 1 0 1 1 0 1 1 1 0
  12     12           1.1 1 1 0 1 1 1 0 0 0 1 0
  13     13           2.2 0 1 1 0 1 1 1 0 0 0 1
  14     14          12.2 0 0 0 0 0 0 0 0 0 0 0
  15     15           5.2 0 0 1 0 1 1 0 1 1 1 0
  16     16           8.2 1 1 0 0 0 1 0 1 1 0 1
  17     17           7.2 1 0 0 0 1 0 1 1 0 1 1
  18     18           1.2 1 1 0 1 1 1 0 0 0 1 0
  19     19           3.2 1 0 1 1 0 1 1 1 0 0 0
  20     20          11.2 1 0 1 1 1 0 0 0 1 0 1
  21     21           6.2 0 0 0 1 0 1 1 0 1 1 1
  22     22           4.2 0 1 0 1 1 0 1 1 1 0 0
  23     23           9.2 1 1 1 0 0 0 1 0 1 1 0
  24     24          10.2 0 1 1 1 0 0 0 1 0 1 1
  25     25           8.3 1 1 0 0 0 1 0 1 1 0 1
  26     26           6.3 0 0 0 1 0 1 1 0 1 1 1
  27     27           2.3 0 1 1 0 1 1 1 0 0 0 1
  28     28           7.3 1 0 0 0 1 0 1 1 0 1 1
  29     29          11.3 1 0 1 1 1 0 0 0 1 0 1
  30     30           5.3 0 0 1 0 1 1 0 1 1 1 0
  31     31           1.3 1 1 0 1 1 1 0 0 0 1 0
  32     32           9.3 1 1 1 0 0 0 1 0 1 1 0
  33     33          10.3 0 1 1 1 0 0 0 1 0 1 1
  34     34           3.3 1 0 1 1 0 1 1 1 0 0 0
  35     35           4.3 0 1 0 1 1 0 1 1 1 0 0
  36     36          12.3 0 0 0 0 0 0 0 0 0 0 0
  37     37           3.4 1 0 1 1 0 1 1 1 0 0 0
  38     38           2.4 0 1 1 0 1 1 1 0 0 0 1
  39     39           6.4 0 0 0 1 0 1 1 0 1 1 1
  40     40           8.4 1 1 0 0 0 1 0 1 1 0 1
  41     41           4.4 0 1 0 1 1 0 1 1 1 0 0
  42     42          12.4 0 0 0 0 0 0 0 0 0 0 0
  43     43          11.4 1 0 1 1 1 0 0 0 1 0 1
  44     44           7.4 1 0 0 0 1 0 1 1 0 1 1
  45     45           5.4 0 0 1 0 1 1 0 1 1 1 0
  46     46           9.4 1 1 1 0 0 0 1 0 1 1 0
  47     47           1.4 1 1 0 1 1 1 0 0 0 1 0
  48     48          10.4 0 1 1 1 0 0 0 1 0 1 1
  class=design, type= pb 
  NOTE: columns run.no and run.no.std.rp  are annotation, 
   not part of the data frame
  #+end_example

On a généré un desgin de Plackett-Burmann car le nombre de facteur est
trop grands, surtout qu'on veut répliquer les valeurs prises en chaque
point.

On va maintenant faire une analyse de variance pour déterminer quels
sont les variables qui semblent avoir un impact sur le résultat:

#+begin_src R :results output :session *R* :exports both
 d2 <- read.csv("results_pb.csv")
 reg <- lm(data=d2, y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11)
 summary(reg)
 anova(reg)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm.default(formula = y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + 
    x9 + x10 + x11, data = d2)

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0050729 -0.0013272 -0.0002847  0.0011332  0.0042005 

Coefficients:
              Estimate Std. Error  t value Pr(>|t|)    
(Intercept)  1.0136255  0.0011249   901.08   <2e-16 ***
x1          -0.5449429  0.0006495  -839.07   <2e-16 ***
x2           0.0503615  0.0006495    77.54   <2e-16 ***
x3           0.0501334  0.0006495    77.19   <2e-16 ***
x4           0.8493340  0.0006495  1307.75   <2e-16 ***
x5           0.0504037  0.0006495    77.61   <2e-16 ***
x6          -0.0481917  0.0006495   -74.20   <2e-16 ***
x7          -0.1502766  0.0006495  -231.39   <2e-16 ***
x8          -0.0505016  0.0006495   -77.76   <2e-16 ***
x9          -2.0494283  0.0006495 -3155.58   <2e-16 ***
x10          0.0508817  0.0006495    78.34   <2e-16 ***
x11          0.0503174  0.0006495    77.47   <2e-16 ***
---
codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.00225 on 36 degrees of freedom
Multiple R-squared:      1,	Adjusted R-squared:      1 
F-statistic: 1.133e+06 on 11 and 36 DF,  p-value: < 2.2e-16

Analysis of Variance Table

Response: y
          Df Sum Sq Mean Sq   F value    Pr(>F)    
x1         1  3.564   3.564  704034.4 < 2.2e-16 ***
x2         1  0.030   0.030    6013.0 < 2.2e-16 ***
x3         1  0.030   0.030    5958.6 < 2.2e-16 ***
x4         1  8.656   8.656 1710208.0 < 2.2e-16 ***
x5         1  0.030   0.030    6023.0 < 2.2e-16 ***
x6         1  0.028   0.028    5506.0 < 2.2e-16 ***
x7         1  0.271   0.271   53539.6 < 2.2e-16 ***
x8         1  0.031   0.031    6046.5 < 2.2e-16 ***
x9         1 50.402  50.402 9957662.6 < 2.2e-16 ***
x10        1  0.031   0.031    6137.8 < 2.2e-16 ***
x11        1  0.030   0.030    6002.4 < 2.2e-16 ***
Residuals 36  0.000   0.000                        
---
codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#+end_example

Mon objectif était de trouver les variables qui semblent ne pas
servir.
Toutefois, ici elles sont toutes indiquées comme ayant un impact
significatif sur l'évolution de la fonction.
J'imagine que cela est dû à un manque de points.

La suite imaginée était d'utiliser du lhs pour explorer l'espace
réduit où l'on ne fait varier que les variables importantes, afin
d'obtenir un modèle plus précis de l'évolution de la fonction afin
d'en trouver le maximum.

